Thomas Cox
4/20/2015
Quiz 2

In testme.c I have implemented 2 functions to locate error bug number 200.  I am calling it error bug 200 
because that is the exit status it gives when checking from the command line after the finding of the bug.

The first function I implemented was inputChar() this function generates a random character between 10 
and 127 in the ASCII character list.  Thus, the possible input domain is the ASCII characters between 10 and 127.
 To generate the random characters I call the built in random function in the C programming language with the 
 pre-programmed time seed.  The random number generated is assigned to the char pointer s variable as the 
 corresponding ASCII character.  I am starting at character 10 in the ASCII set to avoid the junky output 
 that is pre-posted to the command line after the program exits if the first 10 ASCII characters are 
 included in the randomization process.

The second function created inputString() returns a char pointer.  So, I create a char pointer and allocate enough space to create a 
string of size 29.  Size 28 is the longest non-coined and nontechnical word in English, and to properly create that word the
last location in the string would be the null-terminator, thus potential size 29.  To manage my domain for creating the word I randomly 
select 9 numbers and assign a letter to a spot in the string based upon the random number selected and the
assigned character that is associated with that number.  I only use the letters in the string needed to call the
error, the null terminating character, and four additional characters, which are '?', 'a','b', and 'c'.  So, I am creating random strings
of length 0 to 29 with the characters 'r','e','s','t','?','a','b','c', and somewhere a '\0'.  I am testing some edge scenarios allowing the 
strings to be 0 or 29 in length.  I am also allowing for strings to be created that do not have the letters in the word at all and even may
be made of special characters like the question mark.

To find the bug the inputChar() goes through the possible 117 characters to select from and eventually comes across the '[','(','{',' ','a','x','}',')' 
and ']' thus progressing through states.  Then with 9 possible characters available, the program eventually spells the word "reset" and the error message
with exit status 200 is reached.  It takes around 1.1 - 1.7 million iterations to reach the error in this manor.  I used the flip server to get the error and used
gcc -o testme testme.c to create a target file testme to execute.  I then executed the program typing testme and hitting enter on the command line.  The bug is not
severe and is not of high priority as this is a quiz!

