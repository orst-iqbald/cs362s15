        -:    0:Source:cardtest3.c
        -:    0:Graph:cardtest3.gcno
        -:    0:Data:cardtest3.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:/*************************
        -:    2: * Card Test for Remodel
        -:    3: ************************/
        -:    4:
        -:    5:#include "dominion.h"
        -:    6:#include "dominion_helpers.h"
        -:    7:#include <string.h>
        -:    8:#include <stdio.h>
        -:    9:#include <assert.h>
        -:   10:#include "rngs.h"
        -:   11:
        1:   12:int main(){
        -:   13:	int i;
        -:   14:	struct gameState G;
        -:   15:	int p, r;
        1:   16:	int k[10] = {adventurer, council_room, feast, gardens, mine, remodel, smithy, village, baron, great_hall};
        -:   17:
        1:   18:	r = initializeGame(2, k, 1000, &G);
        -:   19:	
        1:   20:	printf("Testing Remodel...\n");
        -:   21:	
        -:   22:	//Test with hand empty
        1:   23:	G.handCount[1] = 0;
        1:   24:	p = playRemodel(&G, 1, 1, 1, 2);
        1:   25:	printf("Bug: Cannot play with no cards in hand!\n");
        -:   26:	
        -:   27:	//Test with supply pile empty
        1:   28:	G.supplyCount[3] = 0;
        1:   29:	p = playRemodel(&G,1,1,1,3);
        1:   30:	assert(G.supplyCount[3] == 0);
        1:   31:	printf("Bug: shouldn't be able to select empty pile\n");
        -:   32:
        -:   33:	//Test with an expensive card (more than +2)
        1:   34:	p = playRemodel(&G,1,1,copper,province);
        1:   35:	assert(p == -1);
        1:   36:	printf("Passed test 3\n");
        -:   37:	
        1:   38:	return 0;	
        -:   39:}
