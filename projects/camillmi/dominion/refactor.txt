# Refactor of 5 Action Cards

For each refactored card a function named int action<CardName>(int handPos, int 
currentPlayer, struct gameState *state) was created. Each of these functions
returns zero upon finishing successfully. The code originally in each respective
case in the switch block was replaced with a call to the appropriate function. 
Below is documentation on each function and the subtle errors intorduced. 
Function declearations were added to dominion.h; definitions to dominion.c.

- int actionAdventurer(int handPos, int currentPlayer, struct gameState *state)

The number of trasure drawn is incrememted by two for each treasure drawn.

- actionCouncilRoom(int handPos, int currentPlayer, struct gameState *state)

Error in for loop used to draw cards causes not all other players to draw.

- int actionSmithy(int handPos, int player, struct gameState *state)

The card isn't dicarded from the hand

- int actionVillage(int handPos, int currentPlayer, struct gameState *state)

The card is trashed instead of beign discarded

- int actionGreatHall(int handPos, int currentPlayer, struct gameState *state)

No errors were intentionally introduced. 
