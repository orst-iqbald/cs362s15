David Adams
CS 362
Spring 2015

Assignment 2

Documentation of smithy card:
The code for the smithy card first dictates that the current player who 
played the smithy card gets to draw 3 cards. This is indicated by a for 
loop that runs 3 times and calls the drawCard() method each time. Once the
player has drawn three cards, the smithy card is discarded since it was
played and the function returns 0, which means the card was played
correctly. In short, the smithy card means that a player gets to draw
three additional cards from the draw pile.

Documentation for adventurer card:
The adventurer card starts with a while loop that loops until the amount
of drawn treasure cards is less than 2. Therefore it will collect 2
treasure cards by the end of the loop. Within the loop, it first checks
to make sure that the draw deck is not empty and if it is, it shuffles
the discard deck to make a new draw deck. Then, the loop draws a card
using the drawCard() method and then checks to see whether that card
is a treasure card (copper, silver, or gold). If the card is a treasure
card, then it increments the drawn treasure variable and if not, then it
stores the card in a temporary hand and removes the card from the hand count.
Then, in another while loop, it discards all of the cards in the temp hand
that were non treasure card, leaving only the 2 treasure cards that were drawn
in the hand. In short, this card allows the player to draw cards until they
have drawn 2 treasure cards and they must discard all non-treasure cards that
were drawn.

Documentation for discardCard() method:
The discardCard() method takes as arguments an int value that stores the
position in the hand of the card to discard, an int value representing
the player discarding a card, a gameState struct holding the information on
the state of the game, and an int flag to indicate whether to discard or 
trash the card. If the card trash flag is not set, then the card is added
to the played pile so that it may stay in the game and if the flag is set
to 1, this does not happen, which means the card will be trashed. If the
card to discard is the last card in hand or there is only one card in the hand,
then it just reduces the hand count, which eliminates this card from the hand.
When these conditions are not true, the method swaps the card to discard with
the last card in the hand and then discards the last card, which is now the 
card to discard. Then, the function returns 0 to indicate that the card
was successfully discarded.

Documentation for updateCoins() method:
The updateCoins() method takes as arguments an int value representing the 
player to act upon, a struct gameState holding the current state of the game,
and an int value holding the amount of bonus coins to add. This method is
fairly simple and what it does is reset the hand coin count for the state of
the game and then it loops through each card in the players hand and determines
if it is a copper, silver, or gold treasure card. For each treasure card that 
it finds, it increments the coin coint respectively. Then, at the end it adds
the passed in bonus value to the coin count and returns 0 to indicate the
the update was successful.
