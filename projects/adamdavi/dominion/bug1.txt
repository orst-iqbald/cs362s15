David Adams
CS 362
Spring 2015

Assignment 3

For this section, I am going to go through each unit test one by one and explain
the bugs that I found instead of just listing all of the bugs.

unittest1.c
This unit test tested the function isGameOver() within dominion.c
The function passed 4 out of 6 tests and found one major but within the function.
For the isGameOver() function, it should only return the status of a game being
over, which is equivalent to returning 1. A game is only over when either the
provice supply pile is empty or 3 other supply piles are empty. The bug that
was found within this function is that the loop within the function loops
over all possible cards instead of just the cards that are being used
in the game. The game only uses 10 supply cards that are kingdomCards and this
loop checks all kingdom cards instead of just those 10. Therefore, since there
are some kingdom cards within the supplyCount array that are unitialized, there
can be piles that do not register a 0 supply count showing that they are empty.
The bug is therefore that the isGameOver() function sometimes returns 1 showing
that the game is over when it shouldn't.

unittest2.c
This unit test tested the function discardCard() within dominion.c
The function passed 10 out 18 tests and here are the bugs found within the function
- the function does not check to make sure that the player number being passed
	in is a valid player number
- the function does not check to make sure that the hand position being passed in
	is a valid hand position
- The remaining tests that failed, point out a pretty huge bug within the function.
	In the beginning of the function, when the trash flag is tested and if the
	flag is not set to 1, which would mean trash the card, then the function
	is supposed to add the card to the discard pile, which keeps it in the game.
	However, in this function, the card is added to the palyedCards pile, which
	doesn't actually do anything of importance within dominion.c. Therefore, 
	whenever you discard a card, it is always trashed even when it shouldn't be and
	when a card is meant to be discarded, the discard count will not be increased
	and the card will not be placed correctly in the discard pile. 

unittest3.c
This unit test tested the gainCard() function within dominion.c
The function passed 22 tests out of 23
- The only bug found in this function as a result of the unit tests is that the 
	function does not account for a player number being passed in that could be
	invalid and thus does not exit and return error when this happens. An error
	handling statement should be included to account for this.

unittest4.c
This unit test tested the updateCoins() function within dominion.c
The function passed 82 out of 83 tests.
- This function was tested using something that might resemble a loose random
	tester as it uses a loop and depending on how the settings are set for the
	tests, it can exhaustively test all of the possible options of coins
	that can be counted. Overall, this function did not show major bugs from
	testing and calculated the correct coin value for all of the tests that tested
	the coin calculation.
- The function does not account for a negative bonus being passed in and if this
	occurs, it does not handle it appropriately. This was the only bug found within
	this function

cardtest1.c
This unit test tested the Smithy card implementation within dominion.c
The function passed 5 out of 10 tests
- The function does not check to make sure that the card passed in at the handPos
	used is actually a Smithy card. Therefore, if another card is accidentally
	passed in, it would incorrectly treat it as a Smithy card when it is not.
- On of the bugs that I introduced into the Smithy card was caught by a unit test.
	The bug that introduced was that the Smithy card draws 4 cards instead of 3 and
	this was caught by the tests showing that the incorrect number of cards
	are in the hand after a Smithy is played. Also, it checks the deck to make
	sure that only 3 cards came out of the deck and this test failed. Therefore,
	this showed that the Smithy card did not correctly draw 3 cards from the deck
	and put them in the hand.
- The other major bug found in the Smithy card is that the smithy card was not 
	correctly discarded after it was played. This was caught by the unit tests
	for this function, however the issue is the bug mentioned above from the 
	discardCard() function, which has a bug in it that makes it so it does not
	actually discard the card.

cardtest2.c
This unit test tested the Adventurer card implementation within dominion.c
The function passed 7 out of 15 tests
There are all sorts of bugs within this function, and some bugs are causing
multiple tests to fail as a result.
- One bug is that the card isn't discarding the adventurer card after it is
	used. Although the discardCard() function has a bug in it that makes it
	so that any cards discarded aren't actually discarded. The bug here is
	that the function doesn't even call the discard Function, which means
	that the card is left in the hand. If the player had multiple actions
	at the time they play the adventurer card, it isn't removed from the 
	hand after it is played, so they could incorrectly play it again.
- There is a bug in the code that is making it so that the last two cards
	in the players hand are not treasure cards, which means that the card
	isn't working as expected. When the adventurer card is played within
	the hand that is set up for the tests that failed, there were treasure
	cards in the deck that the adventurer card should have triggered the 
	game to put in the hand of the player. However, this is not happening.
- The hand count is not being left in the state that it should be in. This 
	is also because of the fact that the card isn't removing itself from the
	hand after it is played. The hand count should be -1 for the card being
	removed and another +2 for the treasure cards being added, so a net +1.
- It appears, based off of the tests, that there is a bug that is affecting
	how the while loop iterates and it is not doing it correctly. It is not
	adding the treasure cards correctly to the hand by taking the first and
	second treasure cards available.

cardtest3.c
This unit test tested the Great Hall card implementation within dominion.c
The function passed 9 out of 15 tests.
- The bug that was found within this card relates to the discardCard() bug
	mentioned previously. The card is not being successfully added to the
	discard pile after it is played.
- The card is also not incrementing the count of the discard pile after it
	is played, which relates to the same bug.

cardtest4.c
This unit test tested the Village card implementation withi dominion.c
The function passed 9 out of 15 tests.
- The main bug found within this card also relates to the discardCard() bug
	in the sense that the card is not being discarded correctly after it is
	played.
- The card does not correctly increment the count of the discard pile or 
	add the card to the top of the discard pile after the card is played.
	However, the card is correctly being removed from the hand.
