David Crisman
CS 362 Assignment 2
4/8/2015

I choose to introduce bugs in the following five cards:  Smithy, Adventurer, Minion, Feast, and Council Room.  The code for these cards was removed from the switch:case statement in cardEffect, and put in their own functions.  Each function returns an integer that will be 0 in the case of a successful function call. 

The function pCouncilRoom() contains the proper code to play the council room card. The necessary variables were imported from the switch:case version, and the case(council_room) calls the function pCouncilRoom().

The function pFeast() contains an updated version of the code from the switch:case version of case(feast).  I found a bug in that code where the feast card was not discarded.  If the player was able to play a village card before the feast card was played, the feast card could be played twice.  This was fixed.  When case(feast) is reached, the function pFeast() is called.

The function pAdventurer() contains an updated version of the code from the switch:case version.  I found that the adventurer card is not discarded and thus could be used more than once in a turn if the player had multiple actions.  I also found that in the adventurer code there is a check to see if the draw pile is empty even though that check exists in the drawCard() code.  This is redundant, and doesn't belong. 

The function pSmithy() contains the proper code to play the smithy card. The necessary variables were imported from the switch:case version, and the case(smithy) calls the function pSmithy().


The function pMinion() contains the proper code to play the minion card. The necessary variables were imported from the switch:case version, and the case(minion) calls the function pMinion().


Here is a summary of the bugs I introducted:

Smithy - I introduced one bug into the smithy card code.  It is such simple code, it seemed like many changes would be obvious.  I changed the for loop to begin at 1 and go to 3.  This will result in only 2 cards being added to the hand.  


Adventurer - I introduced five bugs into the adventurer code.  The first was changing the drawntreasure < 2 to drawntreasure <= 2.  This will allow the player to take 3 cards, but will not break the game.  The second bug is that the adventurer card is trashed at the end of use instead of discarded.  The third is an addition to the definition of the acceptable treasure cards.  I inserted the estate card as an acceptable || option.  The fourth bug changes the cardDrawn to point to the second to last card in the hand instead of the last.  This is a nasty bug as it will change the hand in dramatic and unpredicatable ways.  However, it shouldn't be hard to detect.  The fifth and final bug I introduced was moving the check to see if the draw pile is empty to after when the drawCard() is called.  Since drawCard() checks the same thing and re-shuffles in the case that it is empty, this will always result in false (not empty).  So I changed the code inside the conditional to trash the first card in the current player's hand.  This will never be run, so it may be hard to detect the bug.


Minion - I introduced a bug to where the other players in the game have their cards trashed instead of being discarded.  I also changed a less than comparison to a less than or equal to which will cause the loop to go out of bounds.  Lastly, I added a discardCard() call to choice1 if the player picks the +2 gold.  This will have an undefinied result since the card was already discarded previous to the choice.


Feast - After fixing a bug in this card's code where the card is never discarded at all, I introduced a bug where the card is not trashed as it should be, but actually just discarded back in the discard pile.  This will not be easy to detect unless the test code is rigorous.


Council Room - I changed the council room effect to add to the number of buys of each of the other players in the game when they draw an additional card.  This is a superficial bug and will be caught easily.  However, it will instill false confidence since I also changed the less than in the for loop to a less than or equal to for this part of the function.  This will result in a drawCard being called on one two many players than are in the game.  The expected behavior as a result of this second bug is undefined.

