David Crisman
CS 362 Assignment 3
4/21/2015

This file is a summary of the coverage from the unit tests I wrote for dominion.c

*********************
Unit Tests
*********************

unittest1.c - shuffle()

Stats for coverage of dominion.c:
Lines executed: 14.88% of 598
Brances executed: 15.20% of 421
Taken at least once: 12.35% of 421
Calls executed: 6.73% of 104

function shuffle called 7 returned 100% blocks executed 100%

The coverage for this function was significant.  All blocks were executed 100% of the time.  This does not mean all bugs were found, but it is a good sign for the tests I ran.  Were this function extremely buggy or prone to memory errors, they should've been caught.


---------------------------

unittest2.c - endTurn()

Stats for coverage of dominion.c:
Lines executed: 18.56% of 598
Brances executed: 16.63% of 421
Taken at least once: 13.78% of 421
Calls executed: 9.62% of 104

function endTurn called 2 returned 100% blocks executed 100%

The coverage for this function was significant, despite being called only twice.  All blocks were executed 100% of the time.  This does not mean all bugs were found, but it is a good sign for the tests I ran.  Were this function extremely buggy or prone to memory errors, they should've been caught.

---------------------------

unittest3.c - isGameOver()

Stats for coverage of dominion.c:
Lines executed: 16.39% of 598
Brances executed: 17.10% of 421
Taken at least once: 14.01% of 421
Calls executed: 6.73% of 104

function isGameOver called 7 returned 100% blocks executed 100%

The coverage for this function was significant.  All blocks were executed 100% of the time.  This does not mean all bugs were found, but it is a good sign for the tests I ran.  Were this function extremely buggy or prone to memory errors, they should've been caught.

---------------------------

unittest4.c - buyCard()

Stats for coverage of dominion.c:
Lines executed: 20.40% of 598
Brances executed: 24.70% of 421
Taken at least once: 15.20% of 421
Calls executed: 11.54% of 104

function buyCard called 17 returned 100% blocks executed 100%

The coverage for this function was significant.  All blocks were executed 100% of the time.  This does not mean all bugs were found, but it is a good sign for the tests I ran.  Were this function extremely buggy or prone to memory errors, they should've been caught.

----------------------------


*********************
Card Tests
*********************

cardtest1.c - pSmithy()

Stats for coverage of dominion.c:
Lines executed: 17.89% of 598
Brances executed: 17.10% of 421
Taken at least once: 13.30% of 421
Calls executed: 9.62% of 104

function pSmithy called 1 returned 100% blocks executed 100%

The coverage for this function was significant, however it was only called once.  All blocks were executed 100% of the time.  This does not mean all bugs were found, but it is a good sign for the tests I ran.  Were this function extremely buggy or prone to memory errors, they should've been caught.

----------------------------

cardtest2.c - pAdventurer()

Stats for coverage of dominion.c:
Lines executed: 21.74% of 598
Brances executed: 20.90% of 421
Taken at least once: 16.63% of 421
Calls executed: 12.50% of 104

function pAdventurer called 1 returned 100% blocks executed 100%

The coverage for this function was significant, however it was only called once.  All blocks were executed 100% of the time.  This does not mean all bugs were found, but it is a good sign for the tests I ran.  Were this function extremely buggy or prone to memory errors, they should've been caught.

-----------------------------

cardtest3.c - pFeast()

Stats for coverage of dominion.c:
Lines executed: 24.25% of 598
Brances executed: 27.55% of 421
Taken at least once: 17.10% of 421
Calls executed: 14.42% of 104

function pFeast called 4 returned 100% blocks executed 100%

The coverage for this function was significant, however it was only called four times.  All blocks were executed 100% of the time.  This does not mean all bugs were found, but it is a good sign for the tests I ran.  Were this function extremely buggy or prone to memory errors, they should've been caught.

----------------------------

cardtest4.c - pCouncilRoom()

Stats for coverage of dominion.c:
Lines executed: 20.90% of 598
Brances executed: 19.00% of 421
Taken at least once: 15.20% of 421
Calls executed: 11.54% of 104

function pCouncilRoom called 1 returned 100% blocks executed 100%

The coverage for this function was significant, however it was only called once.  All blocks were executed 100% of the time.  This does not mean all bugs were found, but it is a good sign for the tests I ran.  Were this function extremely buggy or prone to memory errors, they should've been caught.
