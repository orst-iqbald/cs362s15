/*----------------------------------------------------
 * Anthony Smreker
 * CS 362
 * Random Testing Quiz 2
 * randomstring.txt
 * testme.c : gcc -g -Wall -std=c99 testme.c -o testme
*/-----------------------------------------------------
 
 I set my test up to help guide it to the error message. I noticed that
 there was a set of characters used to be evaluated to increase the state
 variable. In inputChar() created an array that consisted of these characters.
 I set up the size of the array and returned a random character from that array
 based on the its size. This implementation needed to be conducted first because 
 based of testme() the error cannot occur until the state variable has reached 9.
 
 Once state reaches 9 the function checks to see what resides in variable s. It 
 checks each char in s to see if it spells out the work "reset". Based off of this
 discovery I created an array in inputString() that contained 10 different strings,
 one of them being "reset". The function returns a random string from the array for
 each iteration testme() goes through. Once the state variable equals 9 and s equals 
 "reset" and error should be thrown.
 
 I was able to compile the program and ran it several time. It was able to successfully 
 stop the program and print the error. Each time I ran the program it took a different 
 amount of iterations but allows reached an error.
 
 