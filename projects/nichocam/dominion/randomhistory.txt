Started out by copying the cardtest1.c and renaming it randomtestcard.c and randomtestadventurer.c. randomtestadventurer had wonderful coverage of the adventurer code, but 0% coverage of smithy. However neither test used any randomness and were just unit tests of the card so I reworked them.

First I changed randomtestadventurer so that it was a never ending for loop that spit out errors when it encountered them. It took three variables and gave them each a theoretically different random number. It would then feed these in to using the adventurer card and see if it caused a bug. I also changed the tests to only print if they encounter an error, but this proved to be foolish since adventurer doesn't discard itself, so it always has an error. 

I removed this from the test since neither this nor the last assignment said to fix the bugs encountered. The program ran without ever encountering an error with any other option numbers. 

For the randomtestcard I chose Smithy since it's a very simple card with a very simple test. To start with a copied the code from randomtestadventurer and changing adventurer to smithy. I then reinserted the discard check since smithy was known to discard. This ran with no problems.

To be honest I'm not sure how random testing helps with JUST a card. If this were a unit test there are so many other things I could do. I could randomize the cards in the hands, or even in the deck. I could do that anyway but the only error I would encounter is using adventurer when there are no coins in the deck.