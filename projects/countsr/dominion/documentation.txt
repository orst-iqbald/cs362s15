Robin Counts
CS 362
Dominion Documentation

Smithy
This Action card costs 4 coins. When played it allows the player to draw 3 additional cards.

The variable ‘i’ is initialized to 0 and drawCard() is executed in a for loop until i=3. discardCard() is then executed which moves the card to the played pile.  


Adventurer
This Action card costs 6 coins. When played it allows the player to draw cards from their deck until they have drawn 2 coin cards. The other cards are discarded to the played pile. 

The ‘drawnTreasure’ variable starts at 0 and drawcard() is executed in a while loop until ‘drawn treasure’ = 2. If deckCount() is 0 then the deck is empty so the played pile is shuffled() and moved to the deck. If a treasure card isn’t drawn ‘drawntreasure’ isn’t incremented. Finally all of the cards that were drawn are moved to the played pile in a while loop that executes discard().



discardCard()
This removes a card from the current hand and moves the card to the played pile or trashes the card from the game. It takes in 4 arguments. The first is ‘handpos’ which is the position of the card in the hand. The second is ‘player’ which is an int that identifies the current player in the game. The third is ‘state’ which is a struct that stores the overall data about the current game. The fourth is ‘trashFlag’ which if tells the method to move the card to the played pile or it gets deleted from the game.



updateCoins()
This calculates the coin value of the current players hand. It takes in 3 arguments. The first is ‘player’ which is an int that identifies the current player in the game. The second is ‘state’ which is a struct that stores the overall data about the current game. The third is ‘bonus’ which stores any bonus coins gained from an Action card. The method loops through each card in the hand and if there are coin cards the values get added to ‘state->coins’.