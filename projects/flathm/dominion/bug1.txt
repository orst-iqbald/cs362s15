/********************************************
Michael Flath
CS362
Assignment2

********************************************/

unittest1.c
This file tests updateCoins():
	There seems to be a bug in the way the function counts coins in the hand. 
	It is possible the 2-d array state.hand[player][i] is not correctly implemented or 
	possibly the for-loop isn't reaching to the end of the hand.
	
unittest2.c
This file tests getCost():
	The tests I ran didn't discover any bugs.
	Tests were ran to check if the cardNumber matched the card, if the correct cost was returned, and if the function
	detected bad input cardnumbers.

unittest3.c
This file tests fullDeckCount()
	There is a bug when placing random cards in the deck and retrieving the specific amount for a particular card. 


unittest4.c
This file tests isGameOver()
	The function isGameOver() breaks when called a large number of times. 
	
cardtest1.c 
This file tests smithy()
	The smithy card is used to gain 3 cards from the players deck and then discard a card.
	The test runs to check the post condition after smithy is called: both the handCount and the discardCount are checked
	to see if the smithy function produced the correct results. Since the tests show the pre condition increases manually
	but the post condition called in smithy doesn't. There is a bug in smithy in handling the discardCount.
	Perhaps, there is a bug in the function discardCard() called in smithy. The discardCount fails for each player.
	
	
cardtest2.c
This file tests adventurer()
	-The adventurer card has a bug in the drawCard function. It is supposed to draw two treasure cards, but after running the test,
	only 1 treasure card was added to the deck. Both the handCount test failed, and by manually checking the deck for treasure cards, only 1 was found.
	-There is another bug, when maximizing the deck with estate cards. Since there are no treasure cards in the deck, the function should not return
	cards to the players hand. The function doesn't seem to cover this option. It must be assumed that treasure cards are always in the deck.
	-When there are no cards in the deck, the function should shuffle the deck, discard, and add a card. There is a bug when dealing with this situation, because
	the handCount after the function call is made is a negative number. 
	

cardtest3.c 
This file tests great_hall
	There seems to be a bug in the way the function handles the pointer to the game state. I've noticed a similar error
	amoung the rest of my other function tests. The gameState doesn't properly change during certain function calls. In this 
	particular case, the number of Actions should increase, but it doesn't. In a similar manner, the handCount should increase, but the test
	failed. 
	I also checked to see if the function scoreFor would determine great_hall was in the player's deck and add 1 VP. The test failed
	and 0 points were displayed. This means there must be a bug in the scoreFor function. 

cardtest4.c 
This file tests village.
	There appears to be a bug in the way numActions is implemented. In the tests that I ran, it passes for the first try, but after that
	the gameState seems to remain the same and the numActions is continually incremented. NumActions should either be reset to 1 within each function call
	or it should be used as an array, similar to handCount[player], to keep track of each players number of actions separately.
	The handCount never gets incremented properly, thus showing a bug in the gameState, when the function is called. 
	


