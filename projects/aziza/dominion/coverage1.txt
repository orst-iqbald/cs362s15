Aryan Aziz
Coverage File

Quick summary of all tests. 


----------

unittest1.c | shuffle()

File 'dominion.c'
Lines executed:17.51% of 714
Branches executed:15.83% of 417
Taken at least once:13.19% of 417
No calls

function shuffle called 4 returned 100% blocks executed 93%

Although the coverage was not 100%, it was still significant by executing 93% of the code in the function. Overall a pretty thorough (although not perfect) test. 

----------

unittest2.c | isGameOver()

File 'dominion.c'
Lines executed:19.47% of 714
Branches executed:17.75% of 417
Taken at least once:14.87% of 417
No calls

function isGameOver called 36 returned 100% blocks executed 100%

A very thorough test, with coverage at 100% of lines and called 36 times. Although this might not have caught all of the possible scenarios, it looked like a very thorough test. 

----------

unittest3.c | getCost()

File 'dominion.c'
Lines executed:21.57% of 714
Branches executed:22.54% of 417
Taken at least once:19.42% of 417
No calls

function getCost called 27 returned 100% blocks executed 96%

Not 100% coverage again, at 96%. My assumption is that I must have missed a card or two. Otherwise, it's a very thorough test that ran many iterations. 

----------

unittest4.c | supplyCount()

File 'dominion.c'
Lines executed:17.65% of 714
Branches executed:15.83% of 417
Taken at least once:12.71% of 417
No calls

function supplyCount called 30 returned 100% blocks executed 100%

Very thorough test, covered 100% of the lines and called a decent amount of times to get a basic idea of any bugs or issues that may be occurring. 

----------

cardtest1.c | smithy

File 'dominion.c'
Lines executed:20.31% of 714
Branches executed:17.75% of 417
Taken at least once:14.15% of 417
No calls

function smithyEffect called 1 returned 100% blocks executed 100%

Although it covered 100% of the lines, I am not very happy that my test only tested it 1 time. I guess a change could just be to run the test script x amount of times, which would then execute 100% of the lines and allow me to do as many tests as necessary. 

----------

cardtest2.c | village

File 'dominion.c'
Lines executed:20.03% of 714
Branches executed:17.27% of 417
Taken at least once:13.67% of 417
No calls

function villageEffect called 1 returned 100% blocks executed 100%

Same as above, a very thorough test but only tested once. All lines were executed however. 

----------

cardtest3.c | adventurer

File 'dominion.c'
Lines executed:19.75% of 714
Branches executed:17.75% of 417
Taken at least once:14.15% of 417
No calls

function adventurerEffect called 1 returned 100% blocks executed 66%

Not a very thorough test at all, and only tested 66% of the lines. My testing scenario simply had it run at its most basic setting and check that, which could be the biggest reason for this. What I should have done is created a testing scenario for each scenario in the code (IE if it had to reshuffle the deck, etc etc). 

---------

cardtest4.c | outpost

File 'dominion.c'
Lines executed:19.75% of 714
Branches executed:17.27% of 417
Taken at least once:13.67% of 417
No calls

function outpostEffect called 1 returned 100% blocks executed 100%

Very thorough test that covered all lines. Similar to cardtest1 and cardtest2 above. 