Bug file for Assignment 3
-Lisa Percival

unittest1 tested the discardCard() function:
No bugs were found in the discardCard() function.
The unit test verified that:
	- the number of cards in the player's hand decreased by 1
	- the discarded card is no longer in the player's hand
	- the discarded card was added to the played pile, if the trash flag is 0

unittest2 tested the gainCard() function:
No bugs were found in the gainCard() function.
The unit test verified that:
	- the supply of the gained card is decremented by 1
	- the function simply exits if there is no supply of the card to be gained
	- the gained card is added to the correct one of discard, deck, or hand based
	  on the flag provided
	  
unittest3 tested the endTurn() function:
No bugs were found in the endTurn() function.
The unit test verified that:
	- the player's hand is emptied into their discard pile
	- the current player (whoseTurn) is shifted to the next player correctly
	- the variables outpostPlayed, phase, numActions, numBuys, and playedCardCount
	  are reset to their correct starting values
	- the next player has 5 cards in their hand
	- the coins variable has the correct value based on the next player's hand
	
unittest4 tested the buyCard() function:
No bugs were found in the buyCard() function.
The unit test verified that:
	- an attempted buy will fail if there are no buys available
	- an attempted buy will fail if there is no supply of the requested card
	- an attempted buy will fail if the requested card costs more than the 
	  number of coins available
	- the bought card is added to the player's discard pile
	- the coins variable is decremented by the bought card's cost
	- the number of buys decreases by 1
	- the phase changes to 1
	
cardtest1 tested the cardEffectSmithy() function:
One bug was found in the cardEffectSmithy() function:
	- Smithy bug 1: The Smithy card is not added to the played pile as it should be.
		Reproduction: Any time a Smithy card is used with cardEffectSmithy().
		Severity: medium
		Priority: medium
		Cause: This is one of the bugs I introduced in Assignment 2. The issue
		is that discardCard() is called with with a trash flag of 1 instead of 0,
		so the Smithy card gets trashed at the end. To fix, simply switch the
		trash flag back to 0.
The unit test verified that:
	- 3 cards are added to the player's hand
	
cardtest2 tested the cardEffectAdventurer() function:
Two bugs were found in the cardEffectAdventurer() function:
	- Adventurer bug 1: The Adventurer card does not result in the player's hand
	  growing by 2 cards.
		Reproduction: Any time an Adventurer card is used with cardEffectAdventurer().
		Severity: medium
		Priority: low
		Cause: This is one of the bugs I introduced in Assignment 2. The issue is
		that the while loop continues as long as drawntreasure <= 2, instead of
		while it is strictly < 2. This means that the player actually gets 3
		treasure cards, so their hand grows by 3 cards instead of 2. To fix,
		simply switch the <= to a <.
	- Adventurer bug 2: The Adventurer card is not added to the played pile as it should be.
		Reproduction: Any time an Adventurer card is used with cardEffectAdventurer().
		Severity: medium
		Priority: medium
		Cause: It would appear that the step to discard the Adventurer was simply 
		missed at the end of the function, as I observed in an earlier assignment.
		This means the card stays in the player's hand. To fix, add a call to
		discardCard() like the other card functions have.
The unit test verified that:
	- the player's hand contains at least 2 treasures
	
cardtest3 tested the cardEffectGreatHall() function:
No bugs were found in the cardEffectGreatHall() function.
The unit test verified that:
	- the player's hand grows by 1 card
	- the number of actions increased by 1
	- the Great Hall card is added to the played pile
	
cardtest4 tested the cardEffectSteward() function:
One bug was found in the cardEffectSteward() function:
	- Steward bug 1: The Steward card does not result in the player's hand 
	  growing by 2 cards when choice1 is 1.
		Reproduction: Use a Steward card by calling cardEffectSteward() with the
		third argument (choice1) set to 1.
		Severity: high
		Priority: medium
		Cause: This is one of the bugs I introduced in Assignment 2. The issue is
		that the second if statement should actually be an else if. With the way
		it is, calling the function with choice1 set to 1 enters both the first
		if block and the else block, so it draws 2 cards and then discards 2. 
		This could have especially complicated effects depending on what values
		are in choice2 and choice3. To fix, change the second if to an else if.
The unit test verified that:
	- the Steward card is added to the played pile
	- when choice1 is 1, the number of coins is not affected
	- when choice1 is 2, the number of coins is increased by 2
	- when choice1 is 2, the number of cards in the player's hand is not affected
	- when choice1 is something other than 1 or 2, the number of coins is not affected
	- when choice1 is something other than 1 or 2, the number of cards in the
	  player's hand decreases by 2