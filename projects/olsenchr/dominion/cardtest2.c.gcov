        -:    0:Source:cardtest2.c
        -:    0:Graph:cardtest2.gcno
        -:    0:Data:cardtest2.gcda
        -:    0:Runs:2
        -:    0:Programs:1
        -:    1:/****************************
        -:    2: * Card Test for Adventurer
        -:    3: ***************************/
        -:    4:
        -:    5:#include "dominion.h"
        -:    6:#include "dominion_helpers.h"
        -:    7:#include <string.h>
        -:    8:#include <stdio.h>
        -:    9:#include <assert.h>
        -:   10:#include "rngs.h"
        -:   11:
        2:   12:int main(){
        -:   13:	int i;
        -:   14:	struct gameState G;
        -:   15:	int p, r;
        2:   16:	int k[10] = {adventurer, council_room, feast, gardens, mine, remodel, smithy, village, baron, great_hall};
        -:   17:
        2:   18:	r = initializeGame(2, k, 1000, &G);
        -:   19:	
        2:   20:	printf("Testing Adventurer...\n");
        -:   21:
        -:   22:	//Test when there's no treasure in deck
        2:   23:	G.deckCount[1] = 0;
        2:   24:	G.discardCount[1] = 0;
        -:   25://	p = playAdventurer(&G,1,1);
        -:   26://	assert(p == 0);
        2:   27:	printf("Passed Test 1\n");
        -:   28:		
        -:   29:	//Test when deck is empty
        2:   30:	G.deckCount[1] = 0;
       24:   31:	for ( i = 0; i < 11; i++){
       22:   32:		gainCard(2, &G, 0, 1);
        -:   33:	}
        -:   34://	p = playAdventurer(&G,1,1);
        -:   35://	assert(G.deckCount > 0);
        2:   36:	printf("Passed test 2\n");
        -:   37:	
        2:   38:	return 0;
        -:   39:}
