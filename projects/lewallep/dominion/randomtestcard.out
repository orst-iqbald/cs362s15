smithyCard(): FAILED  Initial handCount: 64  Final handCount: 67
smithyCard(): FAILED  Initial handCount: 42  Final handCount: 45
smithyCard(): FAILED  Initial handCount: 11  Final handCount: 14
smithyCard(): FAILED  Initial handCount: 8  Final handCount: 11
smithyCard(): FAILED  Initial handCount: 61  Final handCount: 64
smithyCard(): FAILED  Initial handCount: 46  Final handCount: 49
smithyCard(): FAILED  Initial handCount: 12  Final handCount: 15
smithyCard(): FAILED  Initial handCount: 83  Final handCount: 86
smithyCard(): FAILED  Initial handCount: 3  Final handCount: 6
smithyCard(): FAILED  Initial handCount: 19  Final handCount: 22
smithyCard(): FAILED  Initial handCount: 49  Final handCount: 52
smithyCard(): FAILED  Initial handCount: 47  Final handCount: 50
smithyCard(): FAILED  Initial handCount: 31  Final handCount: 34
smithyCard(): FAILED  Initial handCount: 88  Final handCount: 91
smithyCard(): FAILED  Initial handCount: 47  Final handCount: 50
smithyCard(): FAILED  Initial handCount: 32  Final handCount: 35
smithyCard(): FAILED  Initial handCount: 50  Final handCount: 53
smithyCard(): FAILED  Initial handCount: 74  Final handCount: 77
smithyCard(): FAILED  Initial handCount: 93  Final handCount: 96
smithyCard(): FAILED  Initial handCount: 76  Final handCount: 79
smithyCard(): FAILED  Initial handCount: 22  Final handCount: 25
smithyCard(): FAILED  Initial handCount: 81  Final handCount: 84
smithyCard(): FAILED  Initial handCount: 38  Final handCount: 41
smithyCard(): FAILED  Initial handCount: 73  Final handCount: 76
smithyCard(): FAILED  Initial handCount: 35  Final handCount: 38
smithyCard(): FAILED  Initial handCount: 49  Final handCount: 52
smithyCard(): FAILED  Initial handCount: 15  Final handCount: 18
smithyCard(): FAILED  Initial handCount: 10  Final handCount: 13
smithyCard(): FAILED  Initial handCount: 99  Final handCount: 102
smithyCard(): FAILED  Initial handCount: 46  Final handCount: 49
smithyCard(): FAILED  Initial handCount: 41  Final handCount: 44
smithyCard(): FAILED  Initial handCount: 7  Final handCount: 10
smithyCard(): FAILED  Initial handCount: 12  Final handCount: 15
smithyCard(): FAILED  Initial handCount: 68  Final handCount: 71
smithyCard(): FAILED  Initial handCount: 3  Final handCount: 6
smithyCard(): FAILED  Initial handCount: 66  Final handCount: 69
smithyCard(): FAILED  Initial handCount: 30  Final handCount: 33
smithyCard(): FAILED  Initial handCount: 83  Final handCount: 86
smithyCard(): FAILED  Initial handCount: 10  Final handCount: 13
smithyCard(): FAILED  Initial handCount: 54  Final handCount: 57
File 'randomtestcard.c'
Lines executed:97.06% of 34
randomtestcard.c:creating 'randomtestcard.c.gcov'

        -:    0:Source:randomtestcard.c
        -:    0:Graph:randomtestcard.gcno
        -:    0:Data:randomtestcard.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:/*	Student: Philip Lewallen
        -:    2:	Class: CS362-400 Software Engineering II
        -:    3:	Assignment: Assignment 4
        -:    4:*/
        -:    5:
        -:    6:#include "dominion_helpers.h"
        -:    7:#include "dominion.h"
        -:    8:#include "rngs.h"
        -:    9:#include <stdlib.h>
        -:   10:#include <stdio.h>
        -:   11:#include <math.h>
        -:   12:#include <time.h>
        -:   13:#include <assert.h>
        -:   14:
        -:   15:void tSmithyCard(struct gameState *state, int currentPlayer, int handPos, int hCount);
        -:   16:
       40:   17:void tSmithyCard(struct gameState *state, int currentPlayer, int handPos, int hCount)
        -:   18:{
       40:   19:	state->handCount[currentPlayer] = hCount;
        -:   20:
       40:   21:	int initialCount = state->handCount[currentPlayer];
       40:   22:	int finalCount = 0;
        -:   23:
       40:   24:	smithyCard(state, currentPlayer, handPos);
        -:   25:
       40:   26:	finalCount = state->handCount[currentPlayer];
        -:   27:
       40:   28:	if (finalCount - initialCount == 2)
    #####:   29:		printf("smithyCard(): PASSED  Initial handCount: %d  Final handCount: %d\n", initialCount, finalCount);
        -:   30:	else
       40:   31:		printf("smithyCard(): FAILED  Initial handCount: %d  Final handCount: %d\n", initialCount, finalCount);
        -:   32:
       40:   33:	return;
        -:   34:}
        -:   35:
        1:   36:int main(int argc, char **argv)
        -:   37:{
        1:   38:	srand(time(NULL));
        1:   39:	struct gameState *game = newGame();
        -:   40:	int gameStatus;
        -:   41: 	int k[10] = {adventurer, gardens, embargo, village, minion, mine, cutpurse, 
        1:   42:        sea_hag, tribute, smithy};
        1:   43:	int players = ((rand() % 3) + 2);
        1:   44:	int seed = rand() % 62000;
        1:   45:	int i = 0;
        1:   46:	int numTests = 40;
        -:   47:	int handPos, hCount, currentPlayer;
        -:   48:
        1:   49:	gameStatus = initializeGame(players, k, seed, game);
        1:   50:	currentPlayer = rand() % players;
        1:   51:	handPos = 8;
        1:   52:	hCount = 10;
        -:   53:
       41:   54:	for (i = 0; i < numTests; i++)
        -:   55:	{
       40:   56:		players = ((rand() % 3) + 2);
       40:   57:		seed = rand() % 62000;
       40:   58:		currentPlayer = rand() % players;
       40:   59:		hCount = rand() % 100;
       40:   60:		handPos = rand() % hCount;
       40:   61:		tSmithyCard(game, currentPlayer, handPos, hCount);
        -:   62:		
       40:   63:		free(game);
       40:   64:		game = newGame();
       40:   65:		game->handCount[currentPlayer] = 0;
       40:   66:		gameStatus = initializeGame(players, k, seed, game);
        -:   67:	}
        -:   68:
        1:   69:	return 0;
        -:   70:}